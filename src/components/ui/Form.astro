---
import type { Form as Props } from '~/types';
import Button from '~/components/ui/Button.astro';
import { validateForm } from '~/validateForm.js'

const { inputs, textarea, disclaimer, button = 'Submit', description = '' } = Astro.props;
---

<form id="contactForm">
  {
    inputs &&
      inputs.map(
        ({ type = 'text', name, label = '', autocomplete = 'on', placeholder = '', required  = false }) =>
          name && (
            <div class="mb-6">
              {label && (
                <label for={name} class="block text-sm font-medium">
                  {label} {required ? '*' : ''}
                </label>
              )}
              <input
                type={type}
                name={name}
                id={name}
                autocomplete={autocomplete}
                placeholder={placeholder}
                class="py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
                required = {required}
              />
              <p id={'${name}-error'} class="text-red-500 text-sm mt-1 hidden">Please enter a valid {label.toLowerCase()}.</p>
            </div>
          )
      )
  }

<!-- Adding a number input that only allows values from 100 to 900 in steps of 100 -->
<div class="mb-6">
  <label for="numberChoice" class="block text-sm font-medium">
    Choose a Number (100-900, increments of 100) *
  </label>
  <input
    type="number"
    id="numberChoice"
    name="numberChoice"
    min="100"
    max="900"
    step="100"
    required
    placeholder="Choose a number (100, 200, ... 900)"
    class="py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
  />
  <p id="numberChoice-error" class="text-red-500 text-sm mt-1 hidden">Please select a number in increments of 100 from 100 to 900.</p>
</div>

  {
    textarea && (
      <div>
        <label for="textarea" class="block text-sm font-medium">
          {textarea.label}
        </label>
        <textarea
          id="textarea"
          name={textarea.name ? textarea.name : 'message'}
          rows={textarea.rows ? textarea.rows : 4}
          placeholder={textarea.placeholder}
          class="py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
        />
        <p id="textarea-error" class="text-red-500 text-sm mt-1 hidden">Please enter a valid message.</p>
      </div>
    )
  }

  {
    disclaimer && (
      <div class="mt-3 flex items-start">
        <div class="flex mt-0.5">
          <input
            id="disclaimer"
            name="disclaimer"
            type="checkbox"
            class="cursor-pointer mt-1 py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
            required
          />
        </div>
        <div class="ml-3">
          <label for="disclaimer" class="cursor-pointer select-none text-sm text-gray-600 dark:text-gray-400">
            {disclaimer.label}
          </label>
          <p id="disclaimer-error" class="text-red-500 text-sm mt-1 hidden">Please agree to the disclaimer.</p>
        </div>
      </div>
    )
  }

  {
    button && (
      <div class="mt-10 grid">
        <Button variant="primary" type="submit">
          {button}
        </Button>
      </div>
    )
  }

  {
    description && (
      <div class="mt-3 text-center">
        <p class="text-sm text-gray-600 dark:text-gray-400">{description}</p>
      </div>
    )
  }
</form>

<!-- Inline Script to Bind validateForm Function -->
<script type="module">
  import { validateForm } from '~/validateForm.js';
  document.getElementById('contactForm').addEventListener('submit', validateForm);
</script>